generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model CareTaker {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  firstName String
  lastName  String
  type      String
  image     String
  gender    Boolean    @default(true)
  status    Boolean    @default(true)
  Children  Children[]
}

model Children {
  id          Int          @id @default(autoincrement())
  dateOfBirth DateTime
  firstName   String
  lastName    String
  description String
  parentId    Int
  age         Int
  image       String
  gender      Boolean      @default(true)
  status      Boolean      @default(true)
  ChildHobby  ChildHobby[]
  parent      CareTaker    @relation(fields: [parentId], references: [id])
}

model ChildEnviromentActivity {
  id                Int        @id @default(autoincrement())
  activityTimeStart DateTime
  activityTimeEnd   DateTime
  childEnviromentId Int
  enviroment        Enviroment @relation(fields: [childEnviromentId], references: [id])
  Traits            Traits[]
}

model ChildEnviroment {
  id           Int        @id @default(autoincrement())
  childId      Int
  enviromentId Int
  enviroment   Enviroment @relation(fields: [enviromentId], references: [id])
}

model ChildHobby {
  id      Int      @id @default(autoincrement())
  childId Int
  hobbyId Int
  child   Children @relation(fields: [childId], references: [id])
  hobby   Hobbies  @relation(fields: [hobbyId], references: [id])
}

model Hobbies {
  id                Int                 @id @default(autoincrement())
  name              String
  status            Boolean             @default(true)
  ChildHobby        ChildHobby[]
  EnviromentHobbies EnviromentHobbies[]
}

model EnviromentHobbies {
  id           Int        @id @default(autoincrement())
  enviromentId Int
  hobbyId      Int
  enviroment   Enviroment @relation(fields: [enviromentId], references: [id])
  hobby        Hobbies    @relation(fields: [hobbyId], references: [id])
}

model Traits {
  id                  Int                     @id @default(autoincrement())
  learning            Float
  confidance          Float
  publicSpeaking      Float
  communicationSkills Float
  sympthy             Float
  honesty             Float
  responsibility      Float
  activityId          Int
  activity            ChildEnviromentActivity @relation(fields: [activityId], references: [id])
}

model Enviroment {
  id                      Int                       @id @default(autoincrement())
  name                    String
  startAge                Int
  endAge                  Int
  enviromentPath          String
  status                  Boolean                   @default(true)
  addedById               Int
  image                   String
  ChildEnviroment         ChildEnviroment[]
  ChildEnviromentActivity ChildEnviromentActivity[]
  addedBy                 Admin                     @relation(fields: [addedById], references: [id])
  EnviromentHobbies       EnviromentHobbies[]
}

model Admin {
  id         Int          @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String       @unique
  password   String
  status     Boolean      @default(true)
  image      String
  Enviroment Enviroment[]
}
