generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Admin {
  id         Int          @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String       @unique
  password   String
  status     Boolean      @default(true)
  image      String
  Enviroment Enviroment[]
}

model CareTaker {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  firstName String
  lastName  String
  type      String
  image     String
  gender    Boolean    @default(true)
  status    Boolean    @default(true)
  Children  Children[]
}

model Children {
  id              Int               @id @default(autoincrement())
  dateOfBirth     DateTime
  firstName       String
  lastName        String
  description     String
  parentId        Int
  image           String
  gender          Boolean           @default(true)
  status          Boolean           @default(true)
  childEnviroment ChildEnviroment[]
  ChildHobby      ChildHobby[]
  parent          CareTaker         @relation(fields: [parentId], references: [id])
}

model Traits {
  id               Int                @id @default(autoincrement())
  name             String
  status           Boolean            @default(true)
  EnviromentTraits EnviromentTraits[]
  SkillsAquire     SkillsAquire[]
}

model Enviroment {
  id               Int                @id @default(autoincrement())
  name             String
  startAge         Int
  endAge           Int
  enviromentPath   String
  status           Boolean            @default(true)
  addedById        Int
  image            String
  ChildEnviroment  ChildEnviroment[]
  addedBy          Admin              @relation(fields: [addedById], references: [id])
  EnviromentTraits EnviromentTraits[]
}

model Hobbies {
  id         Int          @id @default(autoincrement())
  name       String
  status     Boolean      @default(true)
  ChildHobby ChildHobby[]
}

model ChildEnviroment {
  id                      Int                       @id @default(autoincrement())
  childId                 Int
  enviromentId            Int
  children                Children                  @relation(fields: [childId], references: [id])
  enviroment              Enviroment                @relation(fields: [enviromentId], references: [id])
  ChildEnviromentActivity ChildEnviromentActivity[]
}

model ChildEnviromentActivity {
  id                Int             @id @default(autoincrement())
  activityTimeStart DateTime
  activityTimeEnd   DateTime
  childEnviromentId Int
  enviroment        ChildEnviroment @relation(fields: [childEnviromentId], references: [id])
  SkillsAquire      SkillsAquire[]
}

model ChildHobby {
  id      Int      @id @default(autoincrement())
  childId Int
  hobbyId Int
  child   Children @relation(fields: [childId], references: [id])
  hobby   Hobbies  @relation(fields: [hobbyId], references: [id])
}

model EnviromentTraits {
  id           Int        @id @default(autoincrement())
  enviromentId Int
  traitId      Int
  enviroment   Enviroment @relation(fields: [enviromentId], references: [id])
  trait        Traits     @relation(fields: [traitId], references: [id])
}

model SkillsAquire {
  id                      Int                     @id @default(autoincrement())
  childEnvActivityId      Int
  traitId                 Int
  value                   Float
  childEnviromentActivity ChildEnviromentActivity @relation(fields: [childEnvActivityId], references: [id])
  trait                   Traits                  @relation(fields: [traitId], references: [id])
}
